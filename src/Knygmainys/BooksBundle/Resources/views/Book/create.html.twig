{% extends '::base.html.twig' %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('assets/css/tools/typeahead.css') }}">
{% endblock %}
{% block javascripts %}
    {{ parent() }}
    <script src="{{ asset('assets/js/tools/bootstrap-typeahead.js') }}"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/handlebars.js/4.0.5/handlebars.min.js"></script>
{% endblock %}

{% block content_title %}
    <div>Knygos pridėjimas</div>
{% endblock %}
{% block content_body %}
    <div class="panel-heading"><h1>Pridėti knygą</h1></div>
        {{ form_start(form, {'role':'form'}) }}
        <div class="panel-body">
            {{ form_start(form, {'role':'form'}) }}

                {{ form_label(form.title) }}
                <div class="book-exist" style="display: none;">
                    <p>Ši knygą jau egzistuoja duomenų bazėje. Norėdami redaguoti knygą ar pridėti naują knygos leidimą pasirinkite atitinkamą veiksmą knygos peržiūros puslapyje.</p>
                </div>
                {{ form_errors(form.title) }}
                <div id="titleSearch">
                    {{ form_widget(form.title, {'attr': {'class': 'form-control book-title typeahead', 'placeholder':'Pavadinimas', 'autocomplete': 'off'}}) }}
                </div>

                {{ form_label(form.description) }}
                {{ form_errors(form.description) }}
                {{ form_widget(form.description, {'attr': {'class': 'form-control book-description', 'placeholder':'Knygos aprašymas'}}) }}
                <br>
                {{ form_label(form.author) }}
                {{ form_errors(form.author) }}
                <div id="authorSearch">
                    <input spellcheck="false" class="form-control book-author-search typeahead tt-input" placeholder="Autorių paieška" autocomplete="off" type="text">
                </div>
                {% if customErrors is not empty %}
                    <ul>
                        <li>{{ customErrors['authors'] }}</li>
                    </ul>
                {% endif %}
                <ul id="authors">

                </ul>
                {{ form_widget(form.author, {'attr': {'class': 'form-control book-author', 'style': 'display:block;', 'autocomplete' :'off'}}) }}

                {{ form_label(form.category) }}
                {{ form_errors(form.category) }}
                {{ form_widget(form.category, {'attr': {'class': 'form-control book-category'}}) }}
                <br>
            {{ form_end(form) }}
        </div>
    </div>
{% endblock %}

{% block bottomScripts %}
    <script type="text/javascript">
        $(document).ready(function () {
            $('.book-author-search').prop('disabled', false);
            $('.book-description').prop('disabled', false);
            $('.book-category').prop('disabled', false);
            $("#knygmainys_books_book_save").attr("disabled", false);

            var titleEngine = new Bloodhound({
                datumTokenizer: function (datum) {
                    return Bloodhound.tokenizers.whitespace(datum.title);
                },
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '{{ url('knygmainys_books_search_book_title')}}',
                    prepare: function (query, settings) {
                        settings.type = "POST";
                        settings.contentType = "application/json; charset=UTF-8";
                        settings.data = query;
                        return settings;
                    },
                    filter: function(data) {
                        $('.book-author-search').prop('disabled', false);
                        $('.book-description').prop('disabled', false);
                        $('.book-category').prop('disabled', false);
                        $("#knygmainys_books_book_save").attr("disabled", false);
                        bookMessage('hide');
                        return $.map(data, function(book) {
                            return {
                                id: book.id,
                                title: book.title
                            }
                        });
                    }
                }
            });

            var authorEngine = new Bloodhound({
                datumTokenizer: function (datum) {
                    return Bloodhound.tokenizers.whitespace(datum.firstName);
                },
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '{{ url('knygmainys_books_search_book_author')}}',
                    prepare: function (query, settings) {
                        settings.type = "POST";
                        settings.contentType = "application/json; charset=UTF-8";
                        settings.data = query;
                        return settings;
                    },
                    filter: function(data) {
                        return $.map(data, function(author) {
                            return {
                                id: author.id,
                                firstName: author.firstName,
                                lastName: author.lastName
                            }
                        });
                    }
                }
            });

            titleEngine.initialize();
            authorEngine.initialize();

            $('#titleSearch .typeahead').typeahead(
                    {
                        name: 'title',
                        hint: true,
                        highlight: true,
                        minLength: 2,
                        limit:10,
                        classNames: {
                            open: 'is-open',
                            empty: 'is-empty',
                            cursor: 'is-active',
                            suggestion: 'Typeahead-suggestion',
                            selectable: 'Typeahead-selectable'
                        }
                    },
                    {
                        name: 'titleEngine',
                        displayKey: 'title',
                        source: titleEngine.ttAdapter(),
                        templates: {
                            empty: [
                                '<div class="empty-message hint-large">',
                                'Tokios knygos mūsų duombazėje nėra, galite sekmingai pridėti šią knygą.',
                                '</div>'
                            ].join('\n'),
                            {% verbatim %}
                            suggestion: Handlebars.compile('<div class="hint-large">' +
                                '<div class="media-body tt-hint-body">{{title}}</div>' +
                             '</div>')
                            {% endverbatim %}
                        }
                    });
            $('#titleSearch .typeahead.input-sm').siblings('input.tt-hint').addClass('hint-small');
            $('#titleSearch .typeahead.input-lg').siblings('input.tt-hint').addClass('hint-large');
            $('#titleSearch').bind('typeahead:selected', function(obj, datum, name) {
                $('.book-author-search').prop('disabled', true);
                $('.book-description').prop('disabled', true);
                $('.book-category').prop('disabled', true);
                $("#knygmainys_books_book_save").attr("disabled", true);
                bookMessage('show');
            });

            $('#authorSearch .typeahead').typeahead(
                    {
                        name: 'author',
                        hint: true,
                        highlight: true,
                        minLength: 2,
                        limit:10,
                        classNames: {
                            open: 'is-open',
                            empty: 'is-empty',
                            cursor: 'is-active',
                            suggestion: 'Typeahead-suggestion',
                            selectable: 'Typeahead-selectable'
                        }
                    },
                    {
                        name: 'authorEngine',
                        displayKey: 'title',
                        source: authorEngine.ttAdapter(),
                        templates: {
                            empty: [
                                '<div class="empty-message hint-large">',
                                'Pagal šią užklausą autorių rasti nepavyko.',
                                '</div>'
                            ].join('\n'),
                            {% verbatim %}
                            suggestion: Handlebars.compile('<div class="hint-large">' +
                                '<div class="media-body tt-hint-body">{{firstName}} {{lastName}}</div>' +
                             '</div>')
                            {% endverbatim %}
                        }
                    });

            $('#authorSearch').bind('typeahead:selected', function(obj, datum, name) {
                var ul = document.getElementById("authors");
                var li = document.createElement("li");
                var item = obj;

                if (datum.id == 0) {
                    li.appendChild(document.createTextNode(datum.lastName));
                    item.value = datum.id + '_' + datum.lastName;
                    item.text = datum.lastName;
                } else {
                    li.appendChild(document.createTextNode(datum.firstName + ' ' + datum.lastName));
                    item.value = datum.id;
                    item.text = datum.firstName + ' ' + datum.lastName;
                }

                var values = $('#knygmainys_books_book_author').val();
                if (values == null || values == '') {
                    var array = {};
                    array[ item.value ] = item.text;
                    var newValues = JSON.stringify(array);
                    $('#knygmainys_books_book_author').val(newValues);
                } else {
                    var array = JSON.parse(values);
                    array[item.value] = item.text;
                    var newValues = JSON.stringify(array);
                    $('#knygmainys_books_book_author').val(newValues);
                }

                li.setAttribute('id', item.value);
                li.setAttribute('class', 'author-list-item');
                ul.appendChild(li);
            });

            $('#authors').on('click', '.author-list-item', function(event) {
                $(event.target).remove();
                var values = $('#knygmainys_books_book_author').val();
                var array = JSON.parse(values);
                delete array[ $(this).attr('id') ];
                var newValues = JSON.stringify(array);
                $('#knygmainys_books_book_author').val(newValues);
            });

            function bookMessage(action) {
                if (action == 'show') {
                    $('.book-exist').slideDown();
                } else {
                    $('.book-exist').slideUp();
                }
            }
        });
    </script>
{% endblock %}